@startuml
!include skinparam.puml

+interface DirectedGraph<V, E extends DirectedEdge<V>>{
    -String NOVERTEXTERROR
    +boolean addVertex(V vertex)
    +boolean addVertices(Collection<? extends v> vertices)
    +boolean addEdge(E edge)
    +boolean addEdges(Collection<? extends E> edges)
    +boolean removeVertex(V vertex)
    +boolean removeEdge(V sourceVertex, V targetVertex)
    +boolean removeEdge(E edge)
    +boolean isAdjacent(V sourceVertex, V targetVertex)
    +boolean isEmpty()
    +int getNumVertices()
    +int getNumEdges()
    +List<V> getAdjacent(V vertex)
    +List<V> getVertices()
}

+interface DirectedEdge<V>{
    +V getSourceVertex()
    +V getTargetVertex()
}

+class MultiGraph<V, E extends DirectedEdge<V>> implements DirectedGraph {
    -ArrayList<V> Vertices
    -ArrayList<E> edges
    +boolean addVertex(V vertex)
    +boolean addVertices(Collection<? extends V> vertices)
    +boolean addEdge(E edge)
    +boolean addEdges(Collection<? extends E> edges)
    +boolean removeVertex(V vertex)
    +boolean removeEdge(V sourceVertex, V targetVertex)
    +boolean removeEdge(E edge)
    +boolean isAdjacent(V sourceVertex, V targetVertex)
    +boolean isEmpty()
    +int getNumVertices()
    +int getNumEdges()
    +List<V> getAdjacent(V vertex)
    +List<V> getVertices()
}

@enduml